name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Images
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/help-service:latest ./services/help-service
        docker push ${{ secrets.DOCKER_USERNAME }}/help-service:latest
        docker build -t ${{ secrets.DOCKER_USERNAME }}/user-service:latest ./services/user-service
        docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      KUBECONFIG: kubeconfig

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Set up Kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > kubeconfig
        export KUBECONFIG=kubeconfig

    - name: Output Current Kubernetes Context
      run: |
        kubectl config current-context

    - name: Verify Kubernetes Cluster Connectivity
      run: |
        kubectl get nodes

    - name: Apply Secrets
      run: |
        kubectl apply -f k8s/help-service-secret.yaml
        kubectl apply -f k8s/user-service-secret.yaml

    - name: Apply ConfigMaps
      run: |
        kubectl apply -f k8s/help-service-configmap.yaml
        kubectl apply -f k8s/user-service-configmap.yaml

    - name: Select Minikube Context
      run: |
        kubectl config use-context minikube

    - name: Deploy to Kubernetes
      run: |
        export KUBECONFIG=kubeconfig
        kubectl apply -f k8s/