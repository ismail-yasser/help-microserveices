# Kubernetes Service definitions for microservices
# These services expose the microservices within the cluster using ClusterIP type

# --- User Service ---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  labels:
    app: user-service
  annotations:
    description: "User management service - handles authentication and user profiles"
spec:
  type: ClusterIP # Only reachable within the Kubernetes cluster
  selector:
    app: user-service # Selects pods with label app=user-service
  ports:
  - name: http
    protocol: TCP
    port: 3000 # Port the service will be available on within the cluster
    targetPort: 3000 # Port the container is listening on

---
# --- Help Service ---
apiVersion: v1
kind: Service
metadata:
  name: help-service
  labels:
    app: help-service
  annotations:
    description: "Help request/offer management service"
spec:
  type: ClusterIP # Only reachable within the Kubernetes cluster
  selector:
    app: help-service # Selects pods with label app=help-service
  ports:
  - name: http
    protocol: TCP
    port: 3002 # Port the service will be available on within the cluster
    targetPort: 3002 # Port the container is listening on

# Note: Frontend service remains NodePort in deployment.yaml to be externally accessible
# while backend services use ClusterIP for internal communication
